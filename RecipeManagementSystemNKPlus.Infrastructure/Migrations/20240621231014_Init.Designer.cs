// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using RecipeManagementSystemNKPlus.Infrastructure.DataAccess;

#nullable disable

namespace RecipeManagementSystemNKPlus.Infrastructure.Migrations
{
    [DbContext(typeof(RecipeDbContext))]
    [Migration("20240621231014_Init")]
    partial class Init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.6")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("RecipeManagementSystemNKPlus.Domain.Entities.Composite", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<int>("CompositeTypeId")
                        .HasColumnType("int");

                    b.Property<int>("IngredientId")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.HasIndex("CompositeTypeId");

                    b.HasIndex("IngredientId");

                    b.ToTable("Composites");
                });

            modelBuilder.Entity("RecipeManagementSystemNKPlus.Domain.Entities.CompositeType", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("CompositeTypes");
                });

            modelBuilder.Entity("RecipeManagementSystemNKPlus.Domain.Entities.Ingredient", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Ingredients");
                });

            modelBuilder.Entity("RecipeManagementSystemNKPlus.Domain.Entities.Product", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Quantity")
                        .HasColumnType("int");

                    b.Property<double>("Weight")
                        .HasColumnType("float");

                    b.HasKey("Id");

                    b.ToTable("Products");
                });

            modelBuilder.Entity("RecipeManagementSystemNKPlus.Domain.Entities.ProductCompositeType", b =>
                {
                    b.Property<int>("ProductId")
                        .HasColumnType("int");

                    b.Property<int>("CompositeTypeId")
                        .HasColumnType("int");

                    b.HasKey("ProductId", "CompositeTypeId");

                    b.HasIndex("CompositeTypeId");

                    b.ToTable("ProductCompositeTypes");
                });

            modelBuilder.Entity("RecipeManagementSystemNKPlus.Domain.Entities.Composite", b =>
                {
                    b.HasOne("RecipeManagementSystemNKPlus.Domain.Entities.CompositeType", "CompositeType")
                        .WithMany("Composites")
                        .HasForeignKey("CompositeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeManagementSystemNKPlus.Domain.Entities.Ingredient", "Ingredient")
                        .WithMany("Composites")
                        .HasForeignKey("IngredientId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompositeType");

                    b.Navigation("Ingredient");
                });

            modelBuilder.Entity("RecipeManagementSystemNKPlus.Domain.Entities.ProductCompositeType", b =>
                {
                    b.HasOne("RecipeManagementSystemNKPlus.Domain.Entities.CompositeType", "CompositeType")
                        .WithMany("ProductCompositeTypes")
                        .HasForeignKey("CompositeTypeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("RecipeManagementSystemNKPlus.Domain.Entities.Product", "Product")
                        .WithMany("ProductCompositeTypes")
                        .HasForeignKey("ProductId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CompositeType");

                    b.Navigation("Product");
                });

            modelBuilder.Entity("RecipeManagementSystemNKPlus.Domain.Entities.CompositeType", b =>
                {
                    b.Navigation("Composites");

                    b.Navigation("ProductCompositeTypes");
                });

            modelBuilder.Entity("RecipeManagementSystemNKPlus.Domain.Entities.Ingredient", b =>
                {
                    b.Navigation("Composites");
                });

            modelBuilder.Entity("RecipeManagementSystemNKPlus.Domain.Entities.Product", b =>
                {
                    b.Navigation("ProductCompositeTypes");
                });
#pragma warning restore 612, 618
        }
    }
}
