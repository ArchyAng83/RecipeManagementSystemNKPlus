@page "/calculation/results/{prodId:int}/{ctId:int}/start={startqty:int}/end={endqty:int}/step={step:int}"
@using RecipeManagementSystemNKPlus.Application.Calculations
@inject IJSRuntime Js

<style>
    .forPrintDoc{
        font-size: 10px;
    }
</style>

<div class="">
    <h3>@_product!.Name</h3>
    <h3>@_compositeType!.Name</h3>

    <div class="row g-0 d-inline-flex p-1 forPrintDoc">
        <ul class="list-group col">
            <li class="list-group-item fw-bold">Ingredients</li>
            @foreach (var ing in _ingredients)
            {
                <li class="list-group-item">
                    @ing.Name
                </li>
            }
        </ul>
        @foreach (var comp in _compositeDtos)
        {
            <ul class="list-group col">
                <li class="list-group-item fw-bold">@comp.Qty</li>
                @foreach (var ing in comp.Ingredients!)
                {
                    <li class="list-group-item">
                        @ing.Weight.ToString("f3")
                    </li>
                }
            </ul>
        }
    </div>
</div>
<div class="mb-2">
    <button class="btn btn-secondary hideForPrint" id="buttonPrint" @onclick="PrintDoc">
        <i class="bi bi-printer"></i>
        Print
    </button>
</div>


@code {
    [Parameter]
    public int ProdId { get; set; }

    [Parameter]
    public int CtId { get; set; }

    [Parameter]
    public int StartQty { get; set; } = 1;

    [Parameter]
    public int EndQty { get; set; } = 1;

    [Parameter]
    public int Step { get; set; } = 1;

    private Product? _product = new();

    private CompositeType? _compositeType = new();

    private List<CompositeTypeDto> _compositeDtos = new();

    private List<IngredientDto> _ingredients = new();

    protected override async Task OnInitializedAsync()
    {
        _product = await ProductService.GetByIdAsync(Constant.ProductBaseUrl, ProdId);
        _compositeType = _product!.CompositeTypes!.Find(ct => ct.Id == CtId);
        _compositeDtos = Calculation.GetResult(_compositeType!, _product.Quantity, StartQty, EndQty, Step);
        _ingredients = _compositeDtos.FirstOrDefault()!.Ingredients;
    }

    private async Task PrintDoc()
    {
        await Js.InvokeVoidAsync("Print");
    }
}
